<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Serv00应用保活部署实践fuclaude</title>
      <link href="/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5fuclaude/"/>
      <url>/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5fuclaude/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>Serv00的服务器白嫖还是挺舒服,跟着大佬们的教程部署了很多东西,使用pm2给应用保活,但是重启和杀进程外加清定时任务,导致进程还是时不时的死掉</p><p>这时候大佬<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby91L3NhaWth">@saika<i class="fa fa-external-link-alt"></i></span>发布了<span class="exturl" data-url="aHR0cHM6Ly9zYWlrYS51cy5rZy8yMDI0LzA4LzE1L3NlcnYwMC1rZWVwLWFsaXZlLw==">进程保活最终解决方案<i class="fa fa-external-link-alt"></i></span>,解决了这个痛点</p><p>以<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby91L3NhaWth">@saika<i class="fa fa-external-link-alt"></i></span>示例作为参考,实践部署始皇的fuclaude</p><h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><p>面板Port reservation点击Add port 添加要使用的fuclaude端口<br>接着按照下表 Add a New Website：</p><table><thead><tr><th>Key</th><th>alue</th></tr></thead><tbody><tr><td>Domain</td><td>自定义域名</td></tr><tr><td>Website Type</td><td>Node.js</td></tr><tr><td>Node.js binary</td><td>Node.js v22.4.1</td></tr><tr><td>Environment</td><td>Production</td></tr><tr><td>DNS support</td><td>True</td></tr></tbody></table><p>接着SSH登入，并进入刚刚你新建的域名目录下的 public_nodejs 路径下创建</p><p>update_to_github.sh脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置变量</span></span><br><span class="line">REPO=&quot;wozulong/fuclaude&quot;</span><br><span class="line">DOWNLOAD_DIR=&quot;./fuclaude_update&quot;</span><br><span class="line">TARGET_DIR=&quot;./fuclaude&quot;</span><br><span class="line">ZIP_PASSWORD=&quot;linux.do&quot;</span><br><span class="line">PORT=&quot;30277&quot;  # 请替换为你的实际端口</span><br><span class="line">PASSWORD=&quot;pwd&quot;  # 请替换为你的实际密码</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获取最新版本的下载链接</span></span><br><span class="line">LATEST_RELEASE=$(curl -s &quot;https://api.github.com/repos/$REPO/releases/latest&quot;)</span><br><span class="line">DOWNLOAD_URL=$(echo &quot;$LATEST_RELEASE&quot; | jq -r &#x27;.assets[] | select(.name | contains(&quot;freebsd-amd64&quot;)) | .browser_download_url&#x27;)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否获取到下载链接</span></span><br><span class="line">if [ -z &quot;$DOWNLOAD_URL&quot; ]; then</span><br><span class="line">  echo &quot;无法获取下载链接，请检查仓库和资产名称。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建下载目录</span></span><br><span class="line">mkdir -p &quot;$DOWNLOAD_DIR&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载最新版本</span></span><br><span class="line">curl --max-time 600 -L -o &quot;$DOWNLOAD_DIR/fuclaude.zip&quot; &quot;$DOWNLOAD_URL&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查下载是否成功</span></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">  echo &quot;下载失败，请检查网络连接或下载链接。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压下载的文件</span></span><br><span class="line">unzip -P &quot;$ZIP_PASSWORD&quot; -o &quot;$DOWNLOAD_DIR/fuclaude.zip&quot; -d &quot;$DOWNLOAD_DIR&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查解压是否成功</span></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">  echo &quot;解压失败，请检查压缩包密码。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查解压后的文件夹名称</span></span><br><span class="line">EXTRACTED_DIR=$(find &quot;$DOWNLOAD_DIR&quot; -mindepth 1 -maxdepth 1 -type d)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查解压后的文件夹是否存在</span></span><br><span class="line">if [ ! -d &quot;$EXTRACTED_DIR&quot; ]; then</span><br><span class="line">  echo &quot;解压后的文件夹不存在，请检查压缩包内容。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">替换目标目录中的文件</span></span><br><span class="line">cp -r &quot;$EXTRACTED_DIR&quot;/* &quot;$TARGET_DIR&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查复制是否成功</span></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">  echo &quot;复制文件失败，请检查目标目录路径和权限。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑 config.json 文件</span></span><br><span class="line">sed -i &#x27;&#x27; &#x27;s/&quot;bind&quot;: &quot;127.0.0.1:8181&quot;/&quot;bind&quot;: &quot;0.0.0.0:&#x27;&quot;$PORT&quot;&#x27;&quot;/; s/&quot;signup_enabled&quot;: *false/&quot;signup_enabled&quot;: true/; s/&quot;show_session_key&quot;: *false/&quot;show_session_key&quot;: true/; s/&quot;site_password&quot;: *&quot;[^&quot;]*&quot;/&quot;site_password&quot;: &quot;&#x27;&quot;$PASSWORD&quot;&#x27;&quot;/&#x27; &quot;$TARGET_DIR/config.json&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查编辑是否成功</span></span><br><span class="line">if [ $? -ne 0 ]; then</span><br><span class="line">  echo &quot;编辑 config.json 文件失败，请检查文件路径和权限。&quot;</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清理临时文件</span></span><br><span class="line">rm -rf &quot;$DOWNLOAD_DIR&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;更新成功！&quot;</span><br></pre></td></tr></table></figure><p>赋予执行权限<code>chmod +x update_to_github.sh</code></p><p>执行脚本下载最新fuclaude<code>./update_to_github.sh</code></p><p>到这里fuclaude已经下载完成</p><p>下一步根据<span class="exturl" data-url="aHR0cHM6Ly9zYWlrYS51cy5rZy8yMDI0LzA4LzE1L3NlcnYwMC1rZWVwLWFsaXZlLw==">进程保活最终解决方案<i class="fa fa-external-link-alt"></i></span>来编写具体内容</p><p>app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">&quot;child_process&quot;</span>).<span class="property">exec</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; createProxyMiddleware &#125; = <span class="built_in">require</span>(<span class="string">&quot;http-proxy-middleware&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> currentDir = __dirname;</span><br><span class="line">process.<span class="title function_">chdir</span>(currentDir);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/&#x27;</span>, <span class="title function_">createProxyMiddleware</span>(&#123;</span><br><span class="line">  <span class="attr">target</span>: <span class="string">&#x27;http://127.0.0.1:30277&#x27;</span>, <span class="comment">//改成 Web 应用实际运行端口</span></span><br><span class="line">  <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">ws</span>: <span class="literal">true</span>, </span><br><span class="line">  <span class="attr">onError</span>: <span class="function">(<span class="params">err, req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">writeHead</span>(<span class="number">500</span>, &#123;</span><br><span class="line">      <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    res.<span class="title function_">end</span>(<span class="string">&#x27;Please wait for a while and try to refresh the page.&#x27;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;));</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">keep_web_alive</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">exec</span>(<span class="string">&quot;pgrep -laf fuclaude&quot;</span>, <span class="keyword">function</span> (<span class="params">err, stdout, stderr</span>) &#123; <span class="comment">//改成进程名，如：alist</span></span><br><span class="line">      <span class="keyword">if</span> (stdout.<span class="title function_">includes</span>(<span class="string">&quot;./fuclaude&quot;</span>)) &#123;  <span class="comment">//改成进程实际运行命令，如：alist server</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;web 正在运行&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">exec</span>(</span><br><span class="line">          <span class="string">&quot;cd ./fuclaude &amp;&amp; ./fuclaude&quot;</span>, <span class="comment">// 改成启动脚本或者启动命令，如：chmod +x start.sh &amp;&amp; ./start.sh 或者 ./alist server</span></span><br><span class="line">          <span class="keyword">function</span> (<span class="params">err, stdout, stderr</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;保活-调起web-命令行执行错误:&quot;</span> + err);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;保活-调起web-命令行执行成功!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">setInterval</span>(keep_web_alive, <span class="number">10</span> * <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="function">() =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Example app listening on port <span class="subst">$&#123;port&#125;</span>!`</span>));</span><br></pre></td></tr></table></figure><p>package.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;fuclaude&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A simple fuclaude server&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hl128k&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node app.js&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;express&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.19.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;http-proxy-middleware&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.0&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;22&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;node&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>将<code>app.js</code>和<code>package.json</code>也放入<code>public_nodejs</code>下,目录结构应是如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/home/LOGIN/domains/DOMAIN/public_nodejs/</span><br><span class="line">├──fuclaude</span><br><span class="line">├──app.js</span><br><span class="line">├──package.json</span><br><span class="line">└──update_to_github.sh</span><br></pre></td></tr></table></figure><p>执行<code>npm22 install</code></p><p>执行完成访问网页即可唤醒应用。监控网页即可对应用进行保活</p><p>其他的应用也是一样可以只需要更换此处命令即可<br><code>&quot;cd ./fuclaude &amp;&amp; ./fuclaude&quot;</code></p><h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p> <span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby91L2NzZWxm">@cself<i class="fa fa-external-link-alt"></i></span>的fuclaude 部署教程<br> <span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby91L3NhaWth">@saika<i class="fa fa-external-link-alt"></i></span>的进程保活教程</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Serv00 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Serv00 更新 free-api 脚本</title>
      <link href="/2024/08/14/Serv00%E6%9B%B4%E6%96%B0free-api%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/08/14/Serv00%E6%9B%B4%E6%96%B0free-api%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否提供了 API_NAME 参数</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;使用方法: <span class="variable">$0</span> &lt;API_NAME&gt;&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;例如: <span class="variable">$0</span> qwen-free-api&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从命令行参数获取 API_NAME</span></span><br><span class="line">API_NAME=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成保存目录名称，将 -free- 替换为 2</span></span><br><span class="line">SAVE_DIR=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$API_NAME</span>&quot;</span> | sed <span class="string">&#x27;s/-free-/2/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义安装目录</span></span><br><span class="line">INSTALL_DIR=~/domains/<span class="variable">$SAVE_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新的版本号</span></span><br><span class="line">VERSION=$(curl -s <span class="string">&quot;https://api.github.com/repos/LLM-Red-Team/<span class="variable">$API_NAME</span>/releases/latest&quot;</span> | jq -r <span class="string">&#x27;.tag_name&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否成功获取版本号</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$VERSION</span>&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$VERSION</span>&quot;</span> == <span class="string">&quot;null&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;无法获取最新版本号，退出脚本。&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;最新版本号为：<span class="variable">$VERSION</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除旧版本</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">rm</span> -rf <span class="string">&quot;<span class="variable">$INSTALL_DIR</span>&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已删除旧版本：<span class="variable">$INSTALL_DIR</span>&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;未找到旧版本，跳过删除步骤。&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载并解压新版</span></span><br><span class="line"><span class="built_in">cd</span> ~/domains</span><br><span class="line">wget https://github.com/LLM-Red-Team/<span class="variable">$API_NAME</span>/archive/refs/tags/<span class="variable">$VERSION</span>.tar.gz</span><br><span class="line">tar -zxvf <span class="variable">$VERSION</span>.tar.gz</span><br><span class="line"><span class="built_in">mv</span> <span class="variable">$API_NAME</span>-<span class="variable">$VERSION</span>/ <span class="variable">$SAVE_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入新版本目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$SAVE_DIR</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份 package.json</span></span><br><span class="line"><span class="built_in">cp</span> package.json package.json.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 package.json 中的 sharp 依赖</span></span><br><span class="line"><span class="keyword">if</span> grep -q <span class="string">&#x27;&quot;sharp&quot;&#x27;</span> package.json; <span class="keyword">then</span></span><br><span class="line">    jq <span class="string">&#x27;.resolutions[&quot;sharp&quot;] = &#123;&quot;platform&quot;: &quot;linuxmusl&quot;&#125;&#x27;</span> package.json.bak &gt; package.json.tmp &amp;&amp; <span class="built_in">mv</span> package.json.tmp package.json</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;已将 sharp 依赖更新为 &#x27;platform: linuxmusl&#x27;&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新其他配置</span></span><br><span class="line">jq <span class="string">&#x27;.resolutions[&quot;rollup&quot;] = &quot;npm:@rollup/wasm-node&quot; | .overrides[&quot;rollup&quot;] = &quot;npm:@rollup/wasm-node&quot;&#x27;</span> package.json &gt; package.json.tmp &amp;&amp; <span class="built_in">mv</span> package.json.tmp package.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖并构建</span></span><br><span class="line">npm i</span><br><span class="line">npm run build</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$API_NAME</span> 更新完成，版本：<span class="variable">$VERSION</span>，保存在目录：<span class="variable">$INSTALL_DIR</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Serv00 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Serv00 </tag>
            
            <tag> free-api </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu中docker防火墙处理</title>
      <link href="/2024/08/14/Ubuntu%E4%B8%ADdocker%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%84%E7%90%86/"/>
      <url>/2024/08/14/Ubuntu%E4%B8%ADdocker%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>整了一个vps，想要docker部署一些项目，这渣机根本没有外部防火墙，只能使用Ubuntu内部的ufw防火墙。</p><p>禁止全部，然后放开使用端口，简单</p><p>docker启动，nginx映射正常，完美？</p><p>端口还能继续访问？docker无视ufw，直接修改iptables</p><p>搜了一下，基本都是禁用docker对iptables的修改权限，和对docker专修改的ufw版本。但是禁用docker对iptables修改权限直接导致docker内部通信都失败了。nginx都无法访问了。</p><p>最终还是使用默认的ufw禁止全部，然后让docker容器都加入统一网络，端口都不对外开放，统一使用nginx容器外处理，地址使用服务名称如<code>http://db:3306</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">app:</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker_network</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;chishin/nginx-proxy-manager-zh:release&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;80:80&#x27;</span>    <span class="comment"># HTTP端口</span></span><br><span class="line">      <span class="comment">#- &#x27;81:81&#x27;    # 管理界面端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&#x27;443:443&#x27;</span>  <span class="comment"># HTTPS端口</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">DB_MYSQL_HOST:</span> <span class="string">&quot;db&quot;</span></span><br><span class="line">      <span class="attr">DB_MYSQL_PORT:</span> <span class="number">3306</span></span><br><span class="line">      <span class="attr">DB_MYSQL_USER:</span> <span class="string">&quot;npm&quot;</span></span><br><span class="line">      <span class="attr">DB_MYSQL_PASSWORD:</span> <span class="string">&quot;npm&quot;</span></span><br><span class="line">      <span class="attr">DB_MYSQL_NAME:</span> <span class="string">&quot;nginxproxymanager&quot;</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./letsencrypt:/etc/letsencrypt</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">docker_network</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">&#x27;jc21/mariadb-aria:latest&#x27;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="string">&#x27;x&#x27;</span></span><br><span class="line">      <span class="attr">MYSQL_DATABASE:</span> <span class="string">&#x27;nginxproxymanager&#x27;</span></span><br><span class="line">      <span class="attr">MYSQL_USER:</span> <span class="string">&#x27;npm&#x27;</span></span><br><span class="line">      <span class="attr">MYSQL_PASSWORD:</span> <span class="string">&#x27;npm&#x27;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data/mysql:/var/lib/mysql</span></span><br><span class="line">      </span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">docker_network:</span></span><br><span class="line">    <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vps解决渣渣ip访问网址被cf盾</title>
      <link href="/2024/08/14/vps%E8%A7%A3%E5%86%B3%E6%B8%A3%E6%B8%A3ip%E8%AE%BF%E9%97%AE%E7%BD%91%E5%9D%80%E8%A2%ABcf%E7%9B%BE/"/>
      <url>/2024/08/14/vps%E8%A7%A3%E5%86%B3%E6%B8%A3%E6%B8%A3ip%E8%AE%BF%E9%97%AE%E7%BD%91%E5%9D%80%E8%A2%ABcf%E7%9B%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>整了一个vps，想要docker部署一个chat2api，但是这渣渣机ip太差，百分百被盾根据不能完成对话，贪便宜后悔啊<br>那这服务器就用不了了吗？</p><p>只能使用梯子可以，但是手里的梯子都很垃圾还得过cf盾，自己用还好，代码过cf盾很麻烦，再买一个好的梯子，比vps都贵了太亏了</p><p>最终找到一个<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby90L3RvcGljLzExMzE4OS8zNQ==">解决方法<i class="fa fa-external-link-alt"></i></span>，感谢大佬<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kby91L21pa2VlZQ==">@mikeee<i class="fa fa-external-link-alt"></i></span>，使用大善人的warp代理，白嫖还能稳定过盾</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">warp:</span></span><br><span class="line">  <span class="attr">image:</span> <span class="string">caomingjun/warp</span></span><br><span class="line">  <span class="attr">container_name:</span> <span class="string">warp</span></span><br><span class="line">  <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">  <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">WARP_SLEEP=2</span></span><br><span class="line">    <span class="comment"># - WARP_LICENSE_KEY=&lt;到warpplus或warpbot电报群去KEY填这里然后去掉注释#&gt;</span></span><br><span class="line">  <span class="attr">cap_add:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">NET_ADMIN</span></span><br><span class="line">  <span class="attr">sysctls:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">net.ipv6.conf.all.disable_ipv6=0</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">net.ipv4.conf.all.src_valid_mark=1</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">./data:/var/lib/cloudflare-warp</span></span><br></pre></td></tr></table></figure><p>其他的也一样可以</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 部署 Gitea Actions</title>
      <link href="/2024/07/19/Docker%E9%83%A8%E7%BD%B2GiteaActions/"/>
      <url>/2024/07/19/Docker%E9%83%A8%E7%BD%B2GiteaActions/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>心血来潮想要使用自己的Actions,于是找了一遍现有的git服务器.<br>其中gitea 的 Gitea Actions可以基本无修改的兼容GitHub Actions,也就是说只要拉下来GitHub的项目就能在本地使用,不需要修改还是挺方便的<br>记录一下部署踩坑</p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><p>先放一下最终<br>Docker-Compose</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">gitea:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/gitea:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_UID=1000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">USER_GID=1000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">D:/gitea-data:/data</span>  <span class="comment"># 修改数据目录为 D:\gitea-data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;3000:3000&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;222:22&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">runner:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">gitea/act_runner:latest</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">act_runner</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">gitea</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CONFIG_FILE=/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_INSTANCE_URL=http://host.docker.internal:3000</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">GITEA_RUNNER_REGISTRATION_TOKEN=&lt;TOKEN&gt;</span>  <span class="comment"># 设置你的 Gitea Runner 注册令牌</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">D:/gitea-data/act_runner/config.yaml:/config.yaml</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">D:/gitea-data/act_runner/data:/data</span>  <span class="comment"># 设置 runner 的数据目录为 D:\gitea-data\act_runner</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br></pre></td></tr></table></figure><p>gitea部分没什么可说的基本配置<br>act_runner着重来说</p><ol><li><h3 id="config生成"><a href="#config生成" class="headerlink" title="config生成"></a>config生成</h3></li></ol><p>act_runner 需要先创建容器才能使用然后在容器内使用<code>act_runner generate-config &gt; config.yaml</code>才能生成<br>所有要先删除<code>CONFIG_FILE=/config.yaml</code>和<code>- D:/gitea-data/act_runner/config.yaml:/config.yaml</code>生成一次才行<br>当然现在可以直接使用我的</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Example configuration file, it&#x27;s safe to copy this as the default config file without any modification.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You don&#x27;t have to copy this file to your instance,</span></span><br><span class="line"><span class="comment"># just run `./act_runner generate-config &gt; config.yaml` to generate a config file.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">log:</span></span><br><span class="line">  <span class="comment"># The level of logging, can be trace, debug, info, warn, error, fatal</span></span><br><span class="line">  <span class="attr">level:</span> <span class="string">info</span></span><br><span class="line"></span><br><span class="line"><span class="attr">runner:</span></span><br><span class="line">  <span class="comment"># Where to store the registration result.</span></span><br><span class="line">  <span class="attr">file:</span> <span class="string">.runner</span></span><br><span class="line">  <span class="comment"># Execute how many tasks concurrently at the same time.</span></span><br><span class="line">  <span class="attr">capacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Extra environment variables to run jobs.</span></span><br><span class="line">  <span class="attr">envs:</span></span><br><span class="line">    <span class="attr">A_TEST_ENV_NAME_1:</span> <span class="string">a_test_env_value_1</span></span><br><span class="line">    <span class="attr">A_TEST_ENV_NAME_2:</span> <span class="string">a_test_env_value_2</span></span><br><span class="line">  <span class="comment"># Extra environment variables to run jobs from a file.</span></span><br><span class="line">  <span class="comment"># It will be ignored if it&#x27;s empty or the file doesn&#x27;t exist.</span></span><br><span class="line">  <span class="attr">env_file:</span> <span class="string">.env</span></span><br><span class="line">  <span class="comment"># The timeout for a job to be finished.</span></span><br><span class="line">  <span class="comment"># Please note that the Gitea instance also has a timeout (3h by default) for the job.</span></span><br><span class="line">  <span class="comment"># So the job could be stopped by the Gitea instance if it&#x27;s timeout is shorter than this.</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="string">3h</span></span><br><span class="line">  <span class="comment"># Whether skip verifying the TLS certificate of the Gitea instance.</span></span><br><span class="line">  <span class="attr">insecure:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The timeout for fetching the job from the Gitea instance.</span></span><br><span class="line">  <span class="attr">fetch_timeout:</span> <span class="string">5s</span></span><br><span class="line">  <span class="comment"># The interval for fetching the job from the Gitea instance.</span></span><br><span class="line">  <span class="attr">fetch_interval:</span> <span class="string">2s</span></span><br><span class="line">  <span class="comment"># The labels of a runner are used to determine which jobs the runner can run, and how to run them.</span></span><br><span class="line">  <span class="comment"># Like: &quot;macos-arm64:host&quot; or &quot;ubuntu-latest:docker://gitea/runner-images:ubuntu-latest&quot;</span></span><br><span class="line">  <span class="comment"># Find more images provided by Gitea at https://gitea.com/gitea/runner-images .</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty when registering, it will ask for inputting labels.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty when execute `daemon`, will use labels in `.runner` file.</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-latest:docker://gitea/runner-images:ubuntu-latest&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-22.04:docker://gitea/runner-images:ubuntu-22.04&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&quot;ubuntu-20.04:docker://gitea/runner-images:ubuntu-20.04&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="comment"># Enable cache server to use actions/cache.</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># The directory to store the cache data.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, the cache data will be stored in $HOME/.cache/actcache.</span></span><br><span class="line">  <span class="attr">dir:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># The host of the cache server.</span></span><br><span class="line">  <span class="comment"># It&#x27;s not for the address to listen, but the address to connect from job containers.</span></span><br><span class="line">  <span class="comment"># So 0.0.0.0 is a bad choice, leave it empty to detect automatically.</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># The port of the cache server.</span></span><br><span class="line">  <span class="comment"># 0 means to use a random available port.</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment"># The external cache server URL. Valid only when enable is true.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s specified, act_runner will use this URL as the ACTIONS_CACHE_URL rather than start a server by itself.</span></span><br><span class="line">  <span class="comment"># The URL should generally end with &quot;/&quot;.</span></span><br><span class="line">  <span class="attr">external_server:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">container:</span></span><br><span class="line">  <span class="comment"># Specifies the network to which the container will connect.</span></span><br><span class="line">  <span class="comment"># Could be host, bridge or the name of a custom network.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, act_runner will create a network automatically.</span></span><br><span class="line">  <span class="attr">network:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># Whether to use privileged mode or not when launching task containers (privileged mode is required for Docker-in-Docker).</span></span><br><span class="line">  <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># And other options to be used when the container is started (eg, --add-host=my.gitea.url:host-gateway).</span></span><br><span class="line">  <span class="attr">options:</span></span><br><span class="line">  <span class="comment"># The parent directory of a job&#x27;s working directory.</span></span><br><span class="line">  <span class="comment"># <span class="doctag">NOTE:</span> There is no need to add the first &#x27;/&#x27; of the path as act_runner will add it automatically. </span></span><br><span class="line">  <span class="comment"># If the path starts with &#x27;/&#x27;, the &#x27;/&#x27; will be trimmed.</span></span><br><span class="line">  <span class="comment"># For example, if the parent directory is /path/to/my/dir, workdir_parent should be path/to/my/dir</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, /workspace will be used.</span></span><br><span class="line">  <span class="attr">workdir_parent:</span></span><br><span class="line">  <span class="comment"># Volumes (including bind mounts) can be mounted to containers. Glob syntax is supported, see https://github.com/gobwas/glob</span></span><br><span class="line">  <span class="comment"># You can specify multiple volumes. If the sequence is empty, no volumes can be mounted.</span></span><br><span class="line">  <span class="comment"># For example, if you only allow containers to mount the `data` volume and all the json files in `/src`, you should change the config to:</span></span><br><span class="line">  <span class="comment"># valid_volumes:</span></span><br><span class="line">  <span class="comment">#   - data</span></span><br><span class="line">  <span class="comment">#   - /src/*.json</span></span><br><span class="line">  <span class="comment"># If you want to allow any volume, please use the following configuration:</span></span><br><span class="line">  <span class="comment"># valid_volumes:</span></span><br><span class="line">  <span class="comment">#   - &#x27;**&#x27;</span></span><br><span class="line">  <span class="attr">valid_volumes:</span> []</span><br><span class="line">  <span class="comment"># overrides the docker client host with the specified one.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, act_runner will find an available docker host automatically.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s &quot;-&quot;, act_runner will find an available docker host automatically, but the docker host won&#x27;t be mounted to the job containers and service containers.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s not empty or &quot;-&quot;, the specified docker host will be used. An error will be returned if it doesn&#x27;t work.</span></span><br><span class="line">  <span class="attr">docker_host:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="comment"># Pull docker image(s) even if already present</span></span><br><span class="line">  <span class="attr">force_pull:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Rebuild docker image(s) even if already present</span></span><br><span class="line">  <span class="attr">force_rebuild:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">host:</span></span><br><span class="line">  <span class="comment"># The parent directory of a job&#x27;s working directory.</span></span><br><span class="line">  <span class="comment"># If it&#x27;s empty, $HOME/.cache/act/ will be used.</span></span><br><span class="line">  <span class="attr">workdir_parent:</span></span><br></pre></td></tr></table></figure><ol start="2"><li><h3 id="网络问题"><a href="#网络问题" class="headerlink" title="网络问题"></a>网络问题</h3></li></ol><p>这里的网络不是指连接GitHub和Docker Hub,是<code>GITEA_INSTANCE_URL</code>这个参数<br>因为使用的Docker-Compose习惯性的使用了<code>depends_on</code>,所以配置了<code>GITEA_INSTANCE_URL:http://gitea:3000</code><br>但是这个并不是act_runner使用的,而且由act_runner生成的新的docker容器连接使用的,这个新的容器并不在Docker-Compose里面,所以<span class="exturl" data-url="aHR0cDovL2dpdGVhOjMwMDDmmK/ov57kuI3kuIrnmoQ=">http://gitea:3000是连不上的<i class="fa fa-external-link-alt"></i></span><br>所以这里要么像我一样使用宿主的地址或者使用外部网络<br>先执行<br><code>docker network create gitea-network</code><br>然后配置里增加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">networks:</span></span><br><span class="line">    <span class="attr">gitea-network:</span></span><br><span class="line">        <span class="attr">external:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>networks里都增加固定ip,配置里填固定ip就可以了<code>GITEA_INSTANCE_URL:http://&lt;gitea IP&gt;:3000</code>,理论上是这样的,不过没有实践</p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> Gitea </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Actions </tag>
            
            <tag> Gitea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Serv00 更新 fuclaude 脚本</title>
      <link href="/2024/07/17/Serv00%E6%9B%B4%E6%96%B0fuclaude%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/07/17/Serv00%E6%9B%B4%E6%96%B0fuclaude%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">REPO=<span class="string">&quot;wozulong/fuclaude&quot;</span></span><br><span class="line">DOWNLOAD_DIR=<span class="string">&quot;./fuclaude_update&quot;</span></span><br><span class="line">TARGET_DIR=<span class="string">&quot;./fuclaude&quot;</span></span><br><span class="line">ZIP_PASSWORD=<span class="string">&quot;linux.do&quot;</span></span><br><span class="line">PORT=<span class="string">&quot;YOUR_PORT&quot;</span>  <span class="comment"># 请替换为你的实际端口</span></span><br><span class="line">PASSWORD=<span class="string">&quot;YOUR_PASSWORD&quot;</span>  <span class="comment"># 请替换为你的实际密码</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新版本的下载链接</span></span><br><span class="line">LATEST_RELEASE=$(curl -s <span class="string">&quot;https://api.github.com/repos/<span class="variable">$REPO</span>/releases/latest&quot;</span>)</span><br><span class="line">DOWNLOAD_URL=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$LATEST_RELEASE</span>&quot;</span> | jq -r <span class="string">&#x27;.assets[] | select(.name | contains(&quot;freebsd-amd64&quot;)) | .browser_download_url&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否获取到下载链接</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$DOWNLOAD_URL</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;无法获取下载链接，请检查仓库和资产名称。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建下载目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载最新版本</span></span><br><span class="line">curl -L -o <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>/fuclaude.zip&quot;</span> <span class="string">&quot;<span class="variable">$DOWNLOAD_URL</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查下载是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;下载失败，请检查网络连接或下载链接。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压下载的文件</span></span><br><span class="line">unzip -P <span class="string">&quot;<span class="variable">$ZIP_PASSWORD</span>&quot;</span> -o <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>/fuclaude.zip&quot;</span> -d <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查解压是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;解压失败，请检查压缩包密码。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查解压后的文件夹名称</span></span><br><span class="line">EXTRACTED_DIR=$(find <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span> -mindepth 1 -maxdepth 1 -<span class="built_in">type</span> d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查解压后的文件夹是否存在</span></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$EXTRACTED_DIR</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;解压后的文件夹不存在，请检查压缩包内容。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换目标目录中的文件</span></span><br><span class="line"><span class="built_in">cp</span> -r <span class="string">&quot;<span class="variable">$EXTRACTED_DIR</span>&quot;</span>/* <span class="string">&quot;<span class="variable">$TARGET_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查复制是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;复制文件失败，请检查目标目录路径和权限。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑 config.json 文件</span></span><br><span class="line">sed -i <span class="string">&#x27;&#x27;</span> <span class="string">&#x27;s/&quot;bind&quot;: &quot;127.0.0.1:8181&quot;/&quot;bind&quot;: &quot;0.0.0.0:&#x27;</span><span class="string">&quot;<span class="variable">$PORT</span>&quot;</span><span class="string">&#x27;&quot;/; s/&quot;signup_enabled&quot;: *false/&quot;signup_enabled&quot;: true/; s/&quot;show_session_key&quot;: *false/&quot;show_session_key&quot;: true/; s/&quot;site_password&quot;: *&quot;[^&quot;]*&quot;/&quot;site_password&quot;: &quot;&#x27;</span><span class="string">&quot;<span class="variable">$PASSWORD</span>&quot;</span><span class="string">&#x27;&quot;/&#x27;</span> <span class="string">&quot;<span class="variable">$TARGET_DIR</span>/config.json&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查编辑是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;编辑 config.json 文件失败，请检查文件路径和权限。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理临时文件</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;更新成功！&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Serv00 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Serv00 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> fuclaude </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Serv00 更新 go-proxy-bingai 脚本</title>
      <link href="/2024/07/17/Serv00%E6%9B%B4%E6%96%B0go-proxy-bingai%E8%84%9A%E6%9C%AC/"/>
      <url>/2024/07/17/Serv00%E6%9B%B4%E6%96%B0go-proxy-bingai%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置变量</span></span><br><span class="line">REPO=<span class="string">&quot;Harry-zklcdc/go-proxy-bingai&quot;</span></span><br><span class="line">DOWNLOAD_DIR=<span class="string">&quot;./go_proxy_bingai_update&quot;</span></span><br><span class="line">EXECUTABLE=<span class="string">&quot;go-proxy-bingai&quot;</span></span><br><span class="line">TARGET_DIR=<span class="string">&quot;<span class="subst">$(pwd)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新版本的下载链接</span></span><br><span class="line">LATEST_RELEASE=$(curl -s <span class="string">&quot;https://api.github.com/repos/<span class="variable">$REPO</span>/releases/latest&quot;</span>)</span><br><span class="line">DOWNLOAD_URL=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$LATEST_RELEASE</span>&quot;</span> | jq -r <span class="string">&#x27;.assets[] | select(.name | contains(&quot;freebsd-amd64.tar.gz&quot;)) | .browser_download_url&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否获取到下载链接</span></span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$DOWNLOAD_URL</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;无法获取下载链接，请检查仓库和资产名称。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建下载目录</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载最新版本</span></span><br><span class="line">curl -L -o <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>/<span class="variable">$EXECUTABLE</span>.tar.gz&quot;</span> <span class="string">&quot;<span class="variable">$DOWNLOAD_URL</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查下载是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;下载失败，请检查网络连接或下载链接。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压下载的文件</span></span><br><span class="line">tar -xzvf <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>/<span class="variable">$EXECUTABLE</span>.tar.gz&quot;</span> -C <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查解压是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;解压失败，请检查压缩包内容。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 移动可执行文件到脚本目录</span></span><br><span class="line"><span class="built_in">mv</span> <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>/<span class="variable">$EXECUTABLE</span>&quot;</span> <span class="string">&quot;<span class="variable">$TARGET_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查移动是否成功</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;移动文件失败，请检查目标目录路径和权限。&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理临时文件</span></span><br><span class="line"><span class="built_in">rm</span> -rf <span class="string">&quot;<span class="variable">$DOWNLOAD_DIR</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;更新成功！&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 脚本 </category>
          
          <category> Serv00 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Serv00 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> go-proxy-bingai </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费图床Telegraph-Image</title>
      <link href="/2024/07/17/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8ATelegraph-Image/"/>
      <url>/2024/07/17/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8ATelegraph-Image/</url>
      
        <content type="html"><![CDATA[<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><p>部署了博客少不了要用到图片的时候,没有一个合适的图床肯定是不行的,看了一圈还是决定再嫖一次大善人.</p><h2 id="部署效果"><a href="#部署效果" class="headerlink" title="部署效果"></a>部署效果</h2><p><img src="https://telegraph-image.128765.xyz/file/6400327ab03db4aa0f921.png" alt="预览图片" title="预览图片"></p><h1 id="部署过程"><a href="#部署过程" class="headerlink" title="部署过程"></a>部署过程</h1><p>略<br>按项目文档一步一步走即可.项目<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NmLXBhZ2VzL1RlbGVncmFwaC1JbWFnZQ==">Telegraph-Image<i class="fa fa-external-link-alt"></i></span></p><h1 id="部署后的问题"><a href="#部署后的问题" class="headerlink" title="部署后的问题"></a>部署后的问题</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>原始项目没有对上传加以限制，导致会出现一个问题只有有人知道你部署的就可以使用你的图床，一般人使用到也没有什么问题，万一碰见不法分子就要遭殃了</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>翻阅项目的issues，这个问题已经有很多人提出，同样的也有很多解决方法被研究出来,如<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NmLXBhZ2VzL1RlbGVncmFwaC1JbWFnZS9pc3N1ZXMvOTc=">issues#97<i class="fa fa-external-link-alt"></i></span>,其中有两个解决方案很不错<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01pY3JvTWF0cml4T3Jn">@MicroMatrixOrg<i class="fa fa-external-link-alt"></i></span>提出的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NmLXBhZ2VzL1RlbGVncmFwaC1JbWFnZS9pc3N1ZXMvOTcjaXNzdWVjb21tZW50LTE5ODUxOTM4OTE=">增加防盗链<i class="fa fa-external-link-alt"></i></span>,和<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXRvbTIwMTY=">@maytom2016<i class="fa fa-external-link-alt"></i></span>修改的增加认证版本<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXRvbTIwMTYvVGVsZWdyYXBoLUltYWdlLWF1dGg=">Telegraph-Image-auth<i class="fa fa-external-link-alt"></i></span>很符合我的期望,不过<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXRvbTIwMTYvVGVsZWdyYXBoLUltYWdlLWF1dGg=">Telegraph-Image-auth<i class="fa fa-external-link-alt"></i></span>复刻版本有些老,我还是想要新版本的,而且还能同步官方最好.最后决定自己动手,好在修改难度不高.<br>于是基于这两个方案来修改我的</p><h3 id="上传增加认证"><a href="#上传增加认证" class="headerlink" title="上传增加认证"></a>上传增加认证</h3><p>对上传文件<code>functions/upload.js</code>进行修改,代码参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21heXRvbTIwMTYvVGVsZWdyYXBoLUltYWdlLWF1dGg=">Telegraph-Image-auth<i class="fa fa-external-link-alt"></i></span>,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; errorHandling, telemetryData &#125; <span class="keyword">from</span> <span class="string">&quot;./utils/middleware&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">UnauthorizedException</span>(<span class="params">reason</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(reason, &#123;</span><br><span class="line">    <span class="attr">status</span>: <span class="number">401</span>,</span><br><span class="line">    <span class="attr">statusText</span>: <span class="string">&quot;Unauthorized&quot;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/plain;charset=UTF-8&quot;</span>,</span><br><span class="line">      <span class="comment">// Disables caching by default.</span></span><br><span class="line">      <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-store&quot;</span>,</span><br><span class="line">      <span class="comment">// Returns the &quot;Content-Length&quot; header for HTTP HEAD requests.</span></span><br><span class="line">      <span class="string">&quot;Content-Length&quot;</span>: reason.<span class="property">length</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onRequestPost</span>(<span class="params">context</span>) &#123;  <span class="comment">// Contents of context object  </span></span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        request, <span class="comment">// same as existing Worker API  </span></span><br><span class="line">        env, <span class="comment">// same as existing Worker API  </span></span><br><span class="line">        params, <span class="comment">// if filename includes [id] or [[path]]   </span></span><br><span class="line">        waitUntil, <span class="comment">// same as ctx.waitUntil in existing Worker API  </span></span><br><span class="line">        next, <span class="comment">// used for middleware or to fetch assets  </span></span><br><span class="line">        data, <span class="comment">// arbitrary space for passing data between middlewares </span></span><br><span class="line">    &#125; = context;</span><br><span class="line">    <span class="keyword">const</span> ref=request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> url1= <span class="keyword">new</span> <span class="title function_">URL</span>(ref)</span><br><span class="line">    <span class="keyword">const</span> refparam = <span class="keyword">new</span> <span class="title class_">URLSearchParams</span>(url1.<span class="property">search</span>);</span><br><span class="line">    <span class="keyword">const</span> autcode=refparam.<span class="title function_">get</span>(<span class="string">&#x27;authcode&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(autcode==env.<span class="property">AUTH_CODE</span>)&#123;</span><br><span class="line">        <span class="keyword">const</span> url2 = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>)</span><br><span class="line">        <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(url2.<span class="property">protocol</span> + <span class="string">&#x27;//&#x27;</span> + url2.<span class="property">host</span> + <span class="string">&#x27;/upload&#x27;</span> + url2.<span class="property">search</span>);</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">const</span> clonedRequest = request.<span class="title function_">clone</span>();</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">errorHandling</span>(context);</span><br><span class="line">        <span class="title function_">telemetryData</span>(context);</span><br><span class="line">        <span class="keyword">const</span> response = <span class="title function_">fetch</span>(<span class="string">&#x27;https://telegra.ph/&#x27;</span> + url.<span class="property">pathname</span> + url.<span class="property">search</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: clonedRequest.<span class="property">method</span>,</span><br><span class="line">            <span class="attr">headers</span>: clonedRequest.<span class="property">headers</span>,</span><br><span class="line">            <span class="attr">body</span>: clonedRequest.<span class="property">body</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UnauthorizedException</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="增加防盗链"><a href="#增加防盗链" class="headerlink" title="增加防盗链"></a>增加防盗链</h3><p>对文件读取<code>functions/file/[id].js</code>增加防盗链限制,参考<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2NmLXBhZ2VzL1RlbGVncmFwaC1JbWFnZS9pc3N1ZXMvOTcjaXNzdWVjb21tZW50LTE5ODUxOTM4OTE=">增加防盗链<i class="fa fa-external-link-alt"></i></span></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">onRequest</span>(<span class="params">context</span>) &#123;  <span class="comment">// Contents of context object  </span></span><br><span class="line">    <span class="keyword">const</span> &#123;</span><br><span class="line">        request, <span class="comment">// same as existing Worker API  </span></span><br><span class="line">        env, <span class="comment">// same as existing Worker API  </span></span><br><span class="line">        params, <span class="comment">// if filename includes [id] or [[path]]   </span></span><br><span class="line">        waitUntil, <span class="comment">// same as ctx.waitUntil in existing Worker API  </span></span><br><span class="line">        next, <span class="comment">// used for middleware or to fetch assets  </span></span><br><span class="line">        data, <span class="comment">// arbitrary space for passing data between middlewares </span></span><br><span class="line">    &#125; = context;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Referer</span> = request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Referer</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> refererUrl = <span class="keyword">new</span> <span class="title function_">URL</span>(<span class="title class_">Referer</span>)</span><br><span class="line">            <span class="keyword">let</span> allowedDomains = env.<span class="property">ALLOWED_DOMAINS</span>.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>); </span><br><span class="line">            <span class="keyword">let</span> isAllowed = allowedDomains.<span class="title function_">some</span>(<span class="function"><span class="params">domain</span> =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">let</span> domainPattern = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">`(^|\\.)<span class="subst">$&#123;domain&#125;</span>$`</span>);</span><br><span class="line">              <span class="keyword">return</span> domainPattern.<span class="title function_">test</span>(refererUrl.<span class="property">hostname</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (!isAllowed) &#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/block-img.html&quot;</span>, <span class="number">302</span>);</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/block-img.html&quot;</span>, <span class="number">302</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">const</span> response = <span class="title function_">fetch</span>(<span class="string">&#x27;https://telegra.ph/&#x27;</span> + url.<span class="property">pathname</span> + url.<span class="property">search</span>, &#123;</span><br><span class="line">        <span class="attr">method</span>: request.<span class="property">method</span>,</span><br><span class="line">        <span class="attr">headers</span>: request.<span class="property">headers</span>,</span><br><span class="line">        <span class="attr">body</span>: request.<span class="property">body</span>,</span><br><span class="line">    &#125;).<span class="title function_">then</span>(<span class="title function_">async</span> (response) =&gt; &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">ok</span>); <span class="comment">// true if the response status is 2xx</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">status</span>); <span class="comment">// 200</span></span><br><span class="line">        <span class="keyword">if</span> (response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="comment">// Referer header equal to the admin page</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(url.<span class="property">origin</span> + <span class="string">&quot;/admin&quot;</span>)</span><br><span class="line">            <span class="keyword">if</span> (request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == url.<span class="property">origin</span> + <span class="string">&quot;/admin&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">//show the image</span></span><br><span class="line">                <span class="keyword">return</span> response;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> env.<span class="property">img_url</span> == <span class="string">&quot;undefined&quot;</span> || env.<span class="property">img_url</span> == <span class="literal">null</span> || env.<span class="property">img_url</span> == <span class="string">&quot;&quot;</span>) &#123; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//check the record from kv</span></span><br><span class="line">                <span class="keyword">const</span> record = <span class="keyword">await</span> env.<span class="property">img_url</span>.<span class="title function_">getWithMetadata</span>(params.<span class="property">id</span>);</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;record&quot;</span>)</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(record)</span><br><span class="line">                <span class="keyword">if</span> (record.<span class="property">metadata</span> === <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//if the record is not null, redirect to the image</span></span><br><span class="line">                    <span class="keyword">if</span> (record.<span class="property">metadata</span>.<span class="property">ListType</span> == <span class="string">&quot;White&quot;</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> response;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (record.<span class="property">metadata</span>.<span class="property">ListType</span> == <span class="string">&quot;Block&quot;</span>) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Referer&quot;</span>)</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>))</span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">typeof</span> request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="string">&quot;undefined&quot;</span> || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="literal">null</span> || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/block-img.html&quot;</span>, <span class="number">302</span>)</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(<span class="string">&quot;https://static-res.pages.dev/teleimage/img-block-compressed.png&quot;</span>, <span class="number">302</span>)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (record.<span class="property">metadata</span>.<span class="property">Label</span> == <span class="string">&quot;adult&quot;</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">typeof</span> request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="string">&quot;undefined&quot;</span> || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="literal">null</span> || request.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&#x27;Referer&#x27;</span>) == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/block-img.html&quot;</span>, <span class="number">302</span>)</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(<span class="string">&quot;https://static-res.pages.dev/teleimage/img-block-compressed.png&quot;</span>, <span class="number">302</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//check if the env variables WhiteList_Mode are set</span></span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;env.WhiteList_Mode:&quot;</span>, env.<span class="property">WhiteList_Mode</span>)</span><br><span class="line">                    <span class="keyword">if</span> (env.<span class="property">WhiteList_Mode</span> == <span class="string">&quot;true&quot;</span>) &#123;</span><br><span class="line">                        <span class="comment">//if the env variables WhiteList_Mode are set, redirect to the image</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/whitelist-on.html&quot;</span>, <span class="number">302</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="comment">//if the env variables WhiteList_Mode are not set, redirect to the image</span></span><br><span class="line">                        <span class="keyword">return</span> response;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//get time</span></span><br><span class="line">            <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> apikey = env.<span class="property">ModerateContentApiKey</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">typeof</span> apikey == <span class="string">&quot;undefined&quot;</span> || apikey == <span class="literal">null</span> || apikey == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">typeof</span> env.<span class="property">img_url</span> == <span class="string">&quot;undefined&quot;</span> || env.<span class="property">img_url</span> == <span class="literal">null</span> || env.<span class="property">img_url</span> == <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Not enbaled KV&quot;</span>)</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//add image to kv</span></span><br><span class="line">                    <span class="keyword">await</span> env.<span class="property">img_url</span>.<span class="title function_">put</span>(params.<span class="property">id</span>, <span class="string">&quot;&quot;</span>, &#123;</span><br><span class="line">                        <span class="attr">metadata</span>: &#123; <span class="title class_">ListType</span>: <span class="string">&quot;None&quot;</span>, <span class="title class_">Label</span>: <span class="string">&quot;None&quot;</span>, <span class="title class_">TimeStamp</span>: time &#125;,</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`https://api.moderatecontent.com/moderate/?key=`</span> + apikey + <span class="string">`&amp;url=https://telegra.ph/`</span> + url.<span class="property">pathname</span> + url.<span class="property">search</span>).</span><br><span class="line">                    <span class="title function_">then</span>(<span class="title function_">async</span> (response) =&gt; &#123;</span><br><span class="line">                        <span class="keyword">let</span> moderate_data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(moderate_data)</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;---env.img_url---&quot;</span>)</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(env.<span class="property">img_url</span> == <span class="string">&quot;true&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> (<span class="keyword">typeof</span> env.<span class="property">img_url</span> == <span class="string">&quot;undefined&quot;</span> || env.<span class="property">img_url</span> == <span class="literal">null</span> || env.<span class="property">img_url</span> == <span class="string">&quot;&quot;</span>) &#123; &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="comment">//add image to kv</span></span><br><span class="line">                            <span class="keyword">await</span> env.<span class="property">img_url</span>.<span class="title function_">put</span>(params.<span class="property">id</span>, <span class="string">&quot;&quot;</span>, &#123;</span><br><span class="line">                                <span class="attr">metadata</span>: &#123; <span class="title class_">ListType</span>: <span class="string">&quot;None&quot;</span>, <span class="title class_">Label</span>: moderate_data.<span class="property">rating_label</span>, <span class="title class_">TimeStamp</span>: time &#125;,</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (moderate_data.<span class="property">rating_label</span> == <span class="string">&quot;adult&quot;</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="title class_">Response</span>.<span class="title function_">redirect</span>(url.<span class="property">origin</span> + <span class="string">&quot;/block-img.html&quot;</span>, <span class="number">302</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>修改之后相比于原项目增加了两个环境变量<br><code>AUTH_CODE</code>:上传时认证密码<br><code>ALLOWED_DOMAINS</code>访问时允许的域名,我对空进行的放行<br>由于还打算同步上游项目所以只对必要部分修改,文档什么的没有修改</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><h2 id="https-github-com-hl128k-Telegraph-Image"><a href="#https-github-com-hl128k-Telegraph-Image" class="headerlink" title="https://github.com/hl128k/Telegraph-Image  "></a><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hsMTI4ay9UZWxlZ3JhcGgtSW1hZ2U=">https://github.com/hl128k/Telegraph-Image<i class="fa fa-external-link-alt"></i></span>  </h2><h3 id="更新-2024-8-14"><a href="#更新-2024-8-14" class="headerlink" title="更新 2024&#x2F;8&#x2F;14"></a>更新 2024&#x2F;8&#x2F;14</h3><p>推荐一个分支仓库，ui优化重制版<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL01hclNldmVudGgvQ2xvdWRGbGFyZS1JbWdCZWQ=">CloudFlare-ImgBed<i class="fa fa-external-link-alt"></i></span><br><img src="https://cloudflare-imgbed.128765.xyz/file/ef4dff8ecccef1778ef9e.png" alt="预览" title="预览图片"></p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> Telegraph-Image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub Actions完成Hexo源码与编译后分离部署</title>
      <link href="/2024/07/14/%E4%BD%BF%E7%94%A8GitHubActions%E5%AE%8C%E6%88%90Hexo%E6%BA%90%E7%A0%81%E4%B8%8E%E7%BC%96%E8%AF%91%E5%90%8E%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2/"/>
      <url>/2024/07/14/%E4%BD%BF%E7%94%A8GitHubActions%E5%AE%8C%E6%88%90Hexo%E6%BA%90%E7%A0%81%E4%B8%8E%E7%BC%96%E8%AF%91%E5%90%8E%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>部署过程就不多说了，网上很多现成的教程。就直接放actions代码了。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Blog</span> <span class="string">to</span> <span class="string">DeployRes</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">repository</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="literal">true</span></span><br><span class="line">          <span class="attr">fetch-depth:</span> <span class="number">0</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v4</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&#x27;18&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Static</span> <span class="string">Files</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Update</span> <span class="string">&#x27;updated&#x27;</span> <span class="string">field</span> <span class="string">in</span> <span class="string">posts</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        for file in source/_posts/*.md; do</span></span><br><span class="line"><span class="string">          last_commit_date=$(git log -1 --format=&quot;%ci&quot; -- $file)</span></span><br><span class="line"><span class="string">          if grep -q &#x27;^updated: &#x27; $file; then</span></span><br><span class="line"><span class="string">            sed -i &quot;s/^updated: .*/updated: $last_commit_date/&quot; $file</span></span><br><span class="line"><span class="string">          else</span></span><br><span class="line"><span class="string">            sed -i &quot;/^title: .*/a\updated: $last_commit_date&quot; $file</span></span><br><span class="line"><span class="string">          fi</span></span><br><span class="line"><span class="string">        done</span></span><br><span class="line"><span class="string"></span>      <span class="attr">run:</span> <span class="string">npx</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">DeployRes</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v4</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.BLOG_DEPLOY_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">master</span></span><br><span class="line">        <span class="attr">destination_dir:</span> <span class="string">blog</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">［用户名］/［编译文件存放的项目名］</span></span><br></pre></td></tr></table></figure><p>主题下载的时候使用了git拉取，导致提交的时候还发生了项目冲突，使用的主题文件夹变成了一个文件。<br>后面删除主题以子项目的方式拉取才正常。<br>如果不是用子项目的话可以删除这部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with:</span><br><span class="line">          submodules: true</span><br><span class="line">          fetch-depth: 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
          <category> 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Actions </tag>
            
            <tag> GitHub </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/12/hello-world/"/>
      <url>/2024/07/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Hello World!</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
