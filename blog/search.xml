<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/07/15/hello-world/"/>
      <url>/2024/07/15/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="title-Hello-Worlddate-2024-07-12-16-00-00"><a href="#title-Hello-Worlddate-2024-07-12-16-00-00" class="headerlink" title="title: Hello Worlddate: 2024-07-12 16:00:00"></a>title: Hello World<br>date: 2024-07-12 16:00:00</h2><p>Hello World!</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2024/07/15/202407142310/"/>
      <url>/2024/07/15/202407142310/</url>
      
        <content type="html"><![CDATA[<h2 id="title-使用GitHub-Actions完成Hexo源码与编译后分离部署date-2024-07-14-23-10-20tags-Actions-GitHub-Hexocategories-技术教程-部署excerpt-本文介绍了如何使用GitHub-Actions完成Hexo源码与编译后分离部署的全过程，包含详细的配置代码和注意事项。keywords-GitHub-Actions-Hexo-部署-博客"><a href="#title-使用GitHub-Actions完成Hexo源码与编译后分离部署date-2024-07-14-23-10-20tags-Actions-GitHub-Hexocategories-技术教程-部署excerpt-本文介绍了如何使用GitHub-Actions完成Hexo源码与编译后分离部署的全过程，包含详细的配置代码和注意事项。keywords-GitHub-Actions-Hexo-部署-博客" class="headerlink" title="title: 使用GitHub Actions完成Hexo源码与编译后分离部署date: 2024-07-14 23:10:20tags:  - Actions  - GitHub  - Hexocategories:  - 技术教程  - 部署excerpt: 本文介绍了如何使用GitHub Actions完成Hexo源码与编译后分离部署的全过程，包含详细的配置代码和注意事项。keywords:  - GitHub Actions  - Hexo  - 部署  - 博客"></a>title: 使用GitHub Actions完成Hexo源码与编译后分离部署<br>date: 2024-07-14 23:10:20<br>tags:<br>  - Actions<br>  - GitHub<br>  - Hexo<br>categories:<br>  - 技术教程<br>  - 部署<br>excerpt: 本文介绍了如何使用GitHub Actions完成Hexo源码与编译后分离部署的全过程，包含详细的配置代码和注意事项。<br>keywords:<br>  - GitHub Actions<br>  - Hexo<br>  - 部署<br>  - 博客</h2><p>部署过程就不多说了，网上很多现成的教程。就直接放actions代码了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">name: Deploy Blog to DeployRes</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - master</span><br><span class="line">jobs:</span><br><span class="line">  build:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">    - name: Checkout repository</span><br><span class="line">      uses: actions/checkout@v2</span><br><span class="line">      with:</span><br><span class="line">          submodules: true</span><br><span class="line">          fetch-depth: 0</span><br><span class="line">    - name: Setup Node.js</span><br><span class="line">      uses: actions/setup-node@v4</span><br><span class="line">      with:</span><br><span class="line">        node-version: &#x27;18&#x27;</span><br><span class="line">    - name: Install Dependencies</span><br><span class="line">      run: npm install</span><br><span class="line">    - name: Generate Static Files</span><br><span class="line">      run: npx hexo generate</span><br><span class="line">    - name: Deploy to DeployRes</span><br><span class="line">      uses: peaceiris/actions-gh-pages@v4</span><br><span class="line">      with:</span><br><span class="line">        personal_token: $&#123;&#123; secrets.BLOG_DEPLOY_TOKEN &#125;&#125;</span><br><span class="line">        publish_dir: ./public</span><br><span class="line">        publish_branch: master</span><br><span class="line">        destination_dir: blog</span><br><span class="line">        external_repository: ［用户名］/［编译文件存放的项目名]</span><br></pre></td></tr></table></figure><p>主题下载的时候使用了git拉取，导致提交的时候还发生了项目冲突，使用的主题文件夹变成了一个文件。<br>后面删除主题以子项目的方式拉取才正常。<br>如果不是用子项目的话可以删除这部分：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">with:</span><br><span class="line">          submodules: true</span><br><span class="line">          fetch-depth: 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
