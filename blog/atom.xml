<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hl128k Blog</title>
  <icon>https://www.128765.xyz/icon.png</icon>
  <subtitle>一个bug改一天</subtitle>
  <link href="https://www.128765.xyz/atom.xml" rel="self"/>
  
  <link href="https://www.128765.xyz/"/>
  <updated>2024-12-02T09:23:44.660Z</updated>
  <id>https://www.128765.xyz/</id>
  
  <author>
    <name>hl128k</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>错误记录：TypeScript推断类型导致的never错误及解决方案</title>
    <link href="https://www.128765.xyz/2024/12/02/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95%EF%BC%9ATypeScript%E6%8E%A8%E6%96%AD%E7%B1%BB%E5%9E%8B%E5%AF%BC%E8%87%B4%E7%9A%84never%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://www.128765.xyz/2024/12/02/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95%EF%BC%9ATypeScript%E6%8E%A8%E6%96%AD%E7%B1%BB%E5%9E%8B%E5%AF%BC%E8%87%B4%E7%9A%84never%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2024-12-02T09:05:23.000Z</published>
    <updated>2024-12-02T09:23:44.660Z</updated>
    
    
      
      
        
        
    <summary type="html"> &lt;span id=&quot;more&quot;&gt;&lt;/span&gt; 
&lt;h1 id=&quot;错误记录：TypeScript-推断类型导致的-never-错误及解决方案&quot;&gt;&lt;a href=&quot;#错误记录：TypeScript-推断类型导致的-never-错误及解决方案&quot;</summary>
        
      
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="TypeScript" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/TypeScript/"/>
    
    
    <category term="错误记录" scheme="https://www.128765.xyz/tags/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
    <category term="TypeScript" scheme="https://www.128765.xyz/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>记录一次Lombok属性命名问题的排查与解决</title>
    <link href="https://www.128765.xyz/2024/11/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Lombok%E5%B1%9E%E6%80%A7%E5%91%BD%E5%90%8D%E9%97%AE%E9%A2%98%E7%9A%84%E6%8E%92%E6%9F%A5%E4%B8%8E%E8%A7%A3%E5%86%B3/"/>
    <id>https://www.128765.xyz/2024/11/20/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1Lombok%E5%B1%9E%E6%80%A7%E5%91%BD%E5%90%8D%E9%97%AE%E9%A2%98%E7%9A%84%E6%8E%92%E6%9F%A5%E4%B8%8E%E8%A7%A3%E5%86%B3/</id>
    <published>2024-11-20T01:05:23.000Z</published>
    <updated>2024-12-02T09:23:44.660Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;在一个使用 Lombok 的项目中，遇到了属性命名和工具映射的问题。通过 Lombok 的 @Data 注解自动生成 Getter 和 Setter 方法时，部分属性（如 oTime、mMs、mMl）无法正确映射，原因在于 Lombok 的命名规则与工具（如 MapStruct）之间的兼容性问题。具体来说，Lombok生成的方法命名符合 JavaBeans 规范，但某些工具错误解析了大小写差异，导致映射失败。为了解决该问题，提供了几种方案，包括手动定义 Getter&amp;#x2F;Setter 方法、调整 Lombok 的生成规则、修改属性命名或配置映射工具。最终选择手动定义 Getter&amp;#x2F;Setter 方法作为解决方案。通过此问题，作者反思了规范命名和工具兼容性的重要性，建议在开发中灵活调整解决方案。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="java" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/java/"/>
    
    
    <category term="lombok" scheme="https://www.128765.xyz/tags/lombok/"/>
    
    <category term="java" scheme="https://www.128765.xyz/tags/java/"/>
    
    <category term="错误记录" scheme="https://www.128765.xyz/tags/%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Serv00应用保活部署实践glm-free-api</title>
    <link href="https://www.128765.xyz/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5glm-free-api/"/>
    <id>https://www.128765.xyz/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5glm-free-api/</id>
    <published>2024-08-23T02:25:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;本文介绍了如何在Serv00服务器上使用pm2进行进程保活，解决了因重启、杀进程等操作导致进程意外停止的问题。通过参考@saika发布的进程保活解决方案，用户可以顺利部署LLM Red Team的glm-free-api项目。教程包括项目地址、所需工具安装、端口配置、SSH登录创建更新脚本等步骤，最后通过pm2启动并保持应用的运行状态。此外，还提到该教程仅供学习和娱乐使用，严禁商用。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
  </entry>
  
  <entry>
    <title>Serv00应用保活部署实践fuclaude</title>
    <link href="https://www.128765.xyz/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5fuclaude/"/>
    <id>https://www.128765.xyz/2024/08/23/Serv00%E5%BA%94%E7%94%A8%E4%BF%9D%E6%B4%BB%E9%83%A8%E7%BD%B2%E5%AE%9E%E8%B7%B5fuclaude/</id>
    <published>2024-08-23T01:48:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;本文讨论了在Serv00服务器上使用fuclaude进行应用保活的实践过程。起初，用户通过pm2管理应用，但由于重启和进程杀死等操作，应用仍然会不时崩溃。为了解决这一问题，@saika发布了进程保活的最终解决方案。用户根据该方案，首先在面板中添加fuclaude端口，然后通过SSH登录并创建update_to_github.sh脚本以下载最新的fuclaude。接着，将app.js和package.json文件放入指定目录，并执行npm安装。最后，通过监控网页实现应用的保活。感谢@cself和@saika提供的相关部署教程。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
  </entry>
  
  <entry>
    <title>Serv00 更新 free-api 脚本</title>
    <link href="https://www.128765.xyz/2024/08/14/Serv00%E6%9B%B4%E6%96%B0free-api%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.128765.xyz/2024/08/14/Serv00%E6%9B%B4%E6%96%B0free-api%E8%84%9A%E6%9C%AC/</id>
    <published>2024-08-14T14:34:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">Serv00 更新 free-api 脚本</summary>
    
    
    
    <category term="脚本" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="Serv00" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/Serv00/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
    <category term="free-api" scheme="https://www.128765.xyz/tags/free-api/"/>
    
    <category term="脚本" scheme="https://www.128765.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu中docker防火墙处理</title>
    <link href="https://www.128765.xyz/2024/08/14/Ubuntu%E4%B8%ADdocker%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%84%E7%90%86/"/>
    <id>https://www.128765.xyz/2024/08/14/Ubuntu%E4%B8%ADdocker%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%84%E7%90%86/</id>
    <published>2024-08-14T13:59:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;在使用VPS部署Docker项目时，由于该VPS没有外部防火墙，只能依赖Ubuntu内部的UFW防火墙。最初，通过禁止所有端口并仅放开必要端口来进行配置。然而，发现Docker会直接修改iptables，绕过UFW设置，导致端口依然可以访问。虽然禁用Docker修改iptables权限可以解决问题，但会影响Docker容器的内部通信，导致服务无法正常访问。最终解决方案是使用默认UFW防火墙规则禁止所有端口，同时让Docker容器加入统一网络，并通过Nginx容器处理外部访问，容器间使用服务名称进行通信。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="docker" scheme="https://www.128765.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>vps解决渣渣ip访问网址被cf盾</title>
    <link href="https://www.128765.xyz/2024/08/14/vps%E8%A7%A3%E5%86%B3%E6%B8%A3%E6%B8%A3ip%E8%AE%BF%E9%97%AE%E7%BD%91%E5%9D%80%E8%A2%ABcf%E7%9B%BE/"/>
    <id>https://www.128765.xyz/2024/08/14/vps%E8%A7%A3%E5%86%B3%E6%B8%A3%E6%B8%A3ip%E8%AE%BF%E9%97%AE%E7%BD%91%E5%9D%80%E8%A2%ABcf%E7%9B%BE/</id>
    <published>2024-08-14T13:33:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;用户在使用VPS部署chat2api时遇到因IP质量差导致无法完成对话的问题。虽然可以通过梯子访问，但现有梯子效果不佳且需绕过CF盾，寻找更好的梯子代价高昂。最终，用户找到了一种解决方案，借助大佬@mikeee提供的warp代理，成功实现稳定的连接。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="docker" scheme="https://www.128765.xyz/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 部署 Gitea Actions</title>
    <link href="https://www.128765.xyz/2024/07/19/Docker%E9%83%A8%E7%BD%B2GiteaActions/"/>
    <id>https://www.128765.xyz/2024/07/19/Docker%E9%83%A8%E7%BD%B2GiteaActions/</id>
    <published>2024-07-19T02:26:23.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;本文记录了在本地部署Gitea并使用Gitea Actions的过程，主要讨论了部署过程中遇到的几个关键问题。首先，部署Gitea时使用了Docker-Compose，配置部分较为简单。重点是在部署act_runner时遇到的一些坑，特别是在配置和网络问题上。act_runner需要先生成配置文件，必须删除已有配置后才能生成新的config.yaml。其次，网络问题主要出现在GITEA_INSTANCE_URL参数上，因为Docker-Compose中的depends_on配置并未满足act_runner的网络需求，导致容器无法正确连接到Gitea。解决方案包括创建独立网络并配置固定IP，以确保网络连接正常。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="Gitea" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/Gitea/"/>
    
    
    <category term="Actions" scheme="https://www.128765.xyz/tags/Actions/"/>
    
    <category term="Gitea" scheme="https://www.128765.xyz/tags/Gitea/"/>
    
  </entry>
  
  <entry>
    <title>Serv00 更新 fuclaude 脚本</title>
    <link href="https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0fuclaude%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0fuclaude%E8%84%9A%E6%9C%AC/</id>
    <published>2024-07-17T08:26:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">Serv00 更新 fuclaude 脚本</summary>
    
    
    
    <category term="脚本" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="Serv00" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/Serv00/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
    <category term="脚本" scheme="https://www.128765.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="fuclaude" scheme="https://www.128765.xyz/tags/fuclaude/"/>
    
  </entry>
  
  <entry>
    <title>Serv00 更新 go-proxy-bingai 脚本</title>
    <link href="https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0go-proxy-bingai%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0go-proxy-bingai%E8%84%9A%E6%9C%AC/</id>
    <published>2024-07-17T08:24:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">Serv00 更新 go-proxy-bingai 脚本</summary>
    
    
    
    <category term="脚本" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="Serv00" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/Serv00/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
    <category term="脚本" scheme="https://www.128765.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="go-proxy-bingai" scheme="https://www.128765.xyz/tags/go-proxy-bingai/"/>
    
  </entry>
  
  <entry>
    <title>Serv00 更新 new-api 脚本</title>
    <link href="https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0new-api%E8%84%9A%E6%9C%AC/"/>
    <id>https://www.128765.xyz/2024/07/17/Serv00%E6%9B%B4%E6%96%B0new-api%E8%84%9A%E6%9C%AC/</id>
    <published>2024-07-17T08:24:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">Serv00 更新 new-api 脚本</summary>
    
    
    
    <category term="脚本" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="Serv00" scheme="https://www.128765.xyz/categories/%E8%84%9A%E6%9C%AC/Serv00/"/>
    
    
    <category term="Serv00" scheme="https://www.128765.xyz/tags/Serv00/"/>
    
    <category term="脚本" scheme="https://www.128765.xyz/tags/%E8%84%9A%E6%9C%AC/"/>
    
    <category term="new-api" scheme="https://www.128765.xyz/tags/new-api/"/>
    
  </entry>
  
  <entry>
    <title>免费图床Telegraph-Image</title>
    <link href="https://www.128765.xyz/2024/07/17/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8ATelegraph-Image/"/>
    <id>https://www.128765.xyz/2024/07/17/%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8ATelegraph-Image/</id>
    <published>2024-07-17T01:05:23.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;本文讨论了在部署个人博客时使用图床的重要性，并介绍了基于Telegraph-Image项目的部署过程。虽然原项目缺乏上传限制，可能被不法分子滥用，但作者参考了多个解决方案，对上传增加了认证功能，并加入了防盗链限制。最终，作者在遵循必要修改的基础上，保证了与官方版本的同步，并提供了更新的项目地址和相关预览链接，以供他人参考。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="cloudflare" scheme="https://www.128765.xyz/tags/cloudflare/"/>
    
    <category term="Telegraph-Image" scheme="https://www.128765.xyz/tags/Telegraph-Image/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub Actions完成Hexo源码与编译后分离部署</title>
    <link href="https://www.128765.xyz/2024/07/14/%E4%BD%BF%E7%94%A8GitHubActions%E5%AE%8C%E6%88%90Hexo%E6%BA%90%E7%A0%81%E4%B8%8E%E7%BC%96%E8%AF%91%E5%90%8E%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2/"/>
    <id>https://www.128765.xyz/2024/07/14/%E4%BD%BF%E7%94%A8GitHubActions%E5%AE%8C%E6%88%90Hexo%E6%BA%90%E7%A0%81%E4%B8%8E%E7%BC%96%E8%AF%91%E5%90%8E%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2/</id>
    <published>2024-07-14T15:10:20.000Z</published>
    <updated>2024-08-28T18:27:48.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;在部署过程中，遇到使用git拉取主题时发生了项目冲突，导致提交时主题文件夹变成了一个文件。后来改为以子项目的方式拉取主题，问题得以解决。如果不使用子项目，可以删除相关部分代码。&lt;/p&gt;</summary>
    
    
    
    <category term="技术教程" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/"/>
    
    <category term="部署" scheme="https://www.128765.xyz/categories/%E6%8A%80%E6%9C%AF%E6%95%99%E7%A8%8B/%E9%83%A8%E7%BD%B2/"/>
    
    
    <category term="Actions" scheme="https://www.128765.xyz/tags/Actions/"/>
    
    <category term="GitHub" scheme="https://www.128765.xyz/tags/GitHub/"/>
    
    <category term="Hexo" scheme="https://www.128765.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.128765.xyz/2024/07/12/hello-world/"/>
    <id>https://www.128765.xyz/2024/07/12/hello-world/</id>
    <published>2024-07-12T08:00:00.000Z</published>
    <updated>2024-11-19T18:05:45.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;AI导读：&lt;/strong&gt;你好，世界！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
